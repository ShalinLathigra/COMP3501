1. Scene Graph
	(0.5) Scene Nodes have pointers to their parents/children
		//Completed. All Nodes now have a pointer to the parent and a collection of children. Not all nodes have parents or children though.
	(1.0) Draw function applies based on above hierarchy	
		Store vector of nodes, give each node recursive draw function
			//Nodes recursively Draw
		Also move the matrix multiplication to outside of the shader
			//Moved Matrix Multiplication
	(0.5) Camera implemented as node
		

2. Rotating Cannon
	(1.0) Have a rotating cannon implemented as part of the scene hierarchy
		Each section of cannon is a node in hierarchy
			[base]->[outerTube]->[innerTube], etc.
3. 1st + 3rd person view
	(0.5) Keypress to toggle between 1st and 3rd
		Have 2 positions set in relation to ship, a bit towards the front for 1st, a bit behind for second
	(0.5) Render ship model only in 3rd person
		if 3rd, render ship, else, don't

4. Laser Beam
	(1.5) Laser visible, fires in direction of cannon. 
		Need to take ship and cannon rotation into account, as well as camera position
	(0.5) Laser handled abstractly
		//Don't think this necessarily needs to be a physical object, rather a line drawn from cannon exit to target direction
		FireLaser+UpdateLaser
			Store vector of lasers, update it, draw function etc. Be good with this shit
			Basically just have a Laser Beam class

5. 3D Controls
	(2.0) Smooth acceleration, deceleration, rotation, etc.

6. Ray-Sphere Collision(?)
	(1.0) Collisions work properly
	(2.0) Implement Collisions with Ray-Sphere Collision

7. Missile Fire
	(0.5) Physical Projectile, 3D Model (Possibly Cylinder, Add a better front-facing face)
	(0.5) Correct adaptaion of ray-sphere intersection to missile collision
		(2 rays, parralel to rocket, at an offset =  to missile width)


//Notes

Okay, so what am I working on first?
I think the first thing I should do is get the scene node structure down.

So yeah, the SceneGraph contains the CameraNode
	CameraNode has all other nodes as children
	Asteroids and Rockets and shit are all direct children
	Ship is also child, but ship parts are indirect children.

	This means that I need to create a CameraNode subclass of SceneNode
	In Game, need to, before setting up Asteroid field, Set up the CameraNode, with it's different possible information sets.